# Uses the kicker gem, a file-change watcher, using OS X FSEvents:
#
#   http://github.com/alloy/kicker
#   gem install kicker -s http://gemcutter.org
#
# to send a reload command via Drb to a running spork_server:
#
#   http://github.com/timcharper/spork/
#   gem install spork
#
# which should cause spork to reload rails.
#
# Start the two server processes:
#
#   spork rspec
#   kicker

require "drb/drb"

process do |files|
  if files.any? { |f| f =~ /^(app|config|lib)/ }
    # A file has changed that could change the way the application
    # operates ... tell spork to reload rails.
    begin
      DRb.start_service("druby://localhost:0")
      spec_server = DRbObject.new_with_uri("druby://127.0.0.1:8989")
      spec_server.reload
    rescue DRb::DRbConnError => e
      if e.inspect =~ /connection closed/
        # DRb::DRbConnError: connection closed
        STDERR.puts e.inspect
        STDERR.puts "spork server restarted ..."
      else
        # DRb::DRbConnError: druby://127.0.0.1:8989 - #<Errno::ECONNREFUSED: Connection refused - connect(2)>
        STDERR.puts e.inspect
        STDERR.puts "spork server unreachable ..."
      end
    end
  end
  files.clear    # Throw away all the changed file events ...
end