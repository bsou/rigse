h1. rigse

After checking out the code for the first time swithc to the rites_rails23 branch:

  git checkout -b rites_rails2_3

and run this rake task:

  rake rigse:setup:new_rigse_from_scratch



h1. haml
we use haml for some templates
see: http://haml.hamptoncatlin.com/

to install this plugin we followed this procedure:
1. gem install --no-ri haml
2. haml --rails path/to/rigse_app

!http://clients.fudgestudios.com/chester.jpg!

h1. rigse


h2. Install


h2. notes for collaborating developers

# I could not figure out how to get rspec to work, and I did not feel like installing shoulda, so for now I am using basic unit tests
# This project was derived from BORT, which is basically like an archetype. Other notes in this document are taken from the Bort docs.
# 

h2. TODO Items:

# make models for
## activities (done)
## xhtml text areas [Xhtml]
## Open Responses [OpenResponse]
## Multiple Choice Questions [MultipleChoiceQuestion]
## Datacollectors: sensors and prediction [DataCollector]
## Models [InteractiveModel]

h3. RESTful Authentication

RESTful Authentication is already setup. The routes are setup, along with the mailers and observers.
Forgotten password comes setup, so you don't have to mess around setting it up with every project.

The AASM plugin comes pre-installed. RESTful Authentication is also setup to use user activation.

h3. User Roles

Bort now comes with "Role Requirement":http://code.google.com/p/rolerequirement/ by Tim Harper. A default 
admin role is predefined along with a default admin user. See the migrations for the admin login details.

h3. Open ID Authentication

Bort, as of 0.3, has Open ID integrated with RESTful Authentication. Rejoice!

h3. Will Paginate

We use will_paginate in pretty much every project we use.

h3. Rspec & Rspec-rails

You should be testing your code, so Bort comes with Rspec and Rspec-rails already installed so you're
ready to roll.

h3. Exception Notifier

You don't want your applications to crash and burn so Exception Notifier is already installed to let 
you know when everything goes to shit.

h3. Asset Packager

Packages up your css/javascript so you're not sending 143 files down to the user at the same time. Reduces
load times and saves you bandwidth.

h2. Routes


h2. Settings YAML

There is a settings.yml file that contains site-wide stuff. The site name, url and admin email are all used
in the RESTful Auth mailers, so you don't need to worry about editing them.

h2. Database YAML

The database.yml defaults to sqlite3 but also contains the settings for MySQL in comments so you can switch
over easily.

h2. Capistrano Recipe

Bort comes ready to rock capistrano. The recipe that is setup is based on using git and passenger. It's ready
to go with multistage deployments. It deploys to the production config by default, so if you don't need it
you can ignore it. Just update config/deploy/production.rb with your deployment settings.

More info on capistrano-ext/multistage deployments can be found here: http://weblog.jamisbuck.org/2007/7/23/capistrano-multistage

h2. Uses the Database for Sessions

Bort is setup to use the database to store sessions by default. 

h2. Misc 

* password and password_confirmation are set up to be filtered
* there is a default application layout file
* a page title helper has been added
* index.html is already deleted
* rails.png is already deleted
* a few changes have been made to the default views
* a default css file with blank selectors for common rails elements

h2. Credits

Bort put together by people at "Fudge":http://www.fudgestudios.com/ 
