- imported_user = user.imported_user
%div{:id=>"action_menu_wrapper"}
  %div{ :id => dom_id_for(user, :item), :class => 'item' }
    %div.action_menu
      %div.action_menu_header_left
        =link_to name_for_component(user), user
        - if imported_user
          %span.tiny{:style=>"font-weight:normal"}
            (Imported)
        - if user.portal_teacher
          %span.badge= "Teacher"
        - if user.portal_student
          %span.badge= "Student"
      %div.action_menu_header_right
        %ul.menu
          - if user.portal_teacher && policy(user).teacher_page?
            %li.menu=link_to 'Teacher Page', portal_teacher_path(user.portal_teacher)
          - if user.portal_student && policy(user).student_page?
            %li.menu=link_to 'Student Page', portal_student_path(user.portal_student)
          - if policy(user).edit_by_admin?
            %li.menu=link_to 'edit', edit_user_path(user)
          - else
            - if edit_by_project_admin_user_path(user)
              %li.menu=link_to 'edit', edit_by_project_admin_user_path(user)
          - if policy(user).reset_password?
            %li.menu=link_to 'Reset Password', reset_password_user_path(user)
          - if user.state == 'pending' && policy(user).confirm?
            %li.menu=link_to 'Activate', confirm_user_path(user)
          - if(user != current_visitor) && policy(user).switch?
            - switch_user_form_id = "switch_user_id_#{user.id}"
            %li.menu=link_to 'Switch', 'javascript: void(0);',:onclick => "$('#{switch_user_form_id}').submit();"
            = form_for user, :url => switch_user_path(user), :html => { :method => :put,:class=> "hidden" ,:id=> switch_user_form_id}  do |form|
              = hidden_field_tag 'user[id]', user.id
              = hidden_field_tag 'commit', 'Switch'

    %div{:id => dom_id_for(user, :details), :class => 'tiny'}
      %ul.menu_h
        %li
          login:
          = user.login
        %li
          email:
          = user.email
        %li
          Roles:
          = user.roles.map{|r| r.title.capitalize}.join(', ')
        - if user.portal_teacher
          %li
            Cohorts:
          - user.portal_teacher.cohorts.each do |c|
            %li
              = c.fullname
          %li
            Schools:
            %li
              = "#{user.portal_teacher.school_names.join(', ')}"
      %li
        Status: #{user.state}
        - if imported_user
          = "(#{imported_user.is_verified ? "verified" : "not-verfied"})"
