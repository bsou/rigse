= render :partial => 'activities/show', :collection => investigation.activities, :as => :activity

- content_for(:investigation) do
  %OTUDLContainer{ :leftPanelWidth => investigation.left_nav_panel_width }
    %title
      %OTCompoundDoc
        %bodyText
          #content
            %h3= investigation.name
    %menu
      %OTViewChild{ :useScrollPane => 'true', :useHorizontalScrollPane => 'false', :scrollPanelHasBorder => 'false' }
        %object
          %object{ :refid => ot_refid_for(investigation, :menu) }/
        %viewid
          %object{ :refid => ot_refid_for('menu_accordion_section_view') }/
    %content
      %OTCardContainer{ :local_id => ot_local_id_for(investigation, :activity_card_container), :contentsMayScroll => 'false', :loadViewOnlyOnDemand => 'false', :closeViewOnExit => 'false'}
        %cards
          - investigation.activities.each do |activity|
            %OTSection{ :local_id => ot_local_id_for(activity, :activity_section)}
              %content
                %OTCardContainer{ :local_id => ot_local_id_for(activity, :section_card_container), :contentsMayScroll => 'false' }
                  %cards
                    - activity.sections.each do |section|
                      =yield "section_#{dom_id_for(section)}".to_sym
                  %currentCard
                    - if activity.sections.first
                      %object{ :refid => ot_refid_for(activity.sections.first) }/
                  %viewedCards
        %currentCard
          - if investigation.activities.first
            %object{ :refid => ot_refid_for(investigation.activities.first, :activity_section) }/
        %viewedCards

- content_for(:library) do
  %OTMenu{ :local_id => ot_local_id_for(investigation, :menu) }
    %cardContainer
      %object{ :refid => ot_refid_for(investigation, :activity_card_container) }
    %menuRule
      %object{ :refid => ot_refid_for('activity_rule') }

  %OTMenuRule{ :local_id => ot_local_id_for('activity_rule'), :jumpToAnyCard => 'true' }
