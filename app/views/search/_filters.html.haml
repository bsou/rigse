-scientific_domains=RiGse::Domain.all.collect { |d| [(d.name.nil?) ? d.id.to_s : d.name,d.id] }
-grades=RiGse::GradeSpanExpectation.grade_spans
#filter_container{:style=>"overflow:hidden;"}
  #filtermask
  %div{:style=>'clear:both'}
  #filters_wrapper.visible
    .showhidefilters
      %div{:id=>"oExpandCollapseText"}
      = link_to('Hide Filters', 'javascript: void(0);', :id=>"showHideFilters", :onclick => "showHideFilters(this)")
    .filter-group
      .filterheader
        Sort By
      %div
        = order_check_box(Search::Oldest, "Oldest", @form_model.sort_order)
      %div
        = order_check_box(Search::Newest, "Newest", @form_model.sort_order)
      %div
        = order_check_box(Search::Alphabetical, "Alphabetical", @form_model.sort_order)

      - if scientific_domains.size > 0
        .domaincolumn
          .filterheader
            Scientific Domain
          -scientific_domains.each do |domain|
            .tablecell
              = check_box_tag 'domain_id[]',domain[1], (@form_model.domain_id.include?(domain[1].to_s))?true:false, :id=>domain[0].gsub(/\s+/, "")
              = label_tag domain[0].gsub(/\s+/, ""), domain[0]
            /= check_box_tag :domain_id, domain, true
      - if grades.size > 0
        .gradecolumn
          .filterheader
            Grade
          .tablecell
          -grades.each do |grade|
            .tablecell
              = check_box_tag 'grade_span[]', grade,(@form_model.grade_span.include?(grade.to_s))?true:false,:id=>grade
              = label_tag grade, grade
    .filter-group
      = render :partial => "search/subject_areas_filter"
    .filter-group
      = render :partial => "search/grade_levels_filter"
    .filter-group
      = render :partial => "search/projects_filter"
    .filter-group
      .filterheader
        Authorship
      .tablecell
        = check_box_tag 'include_official', '1', @form_model.will_show_official, :id => 'include_official'
        %label.tooltip
          Official
          %span.tip
            These materials are written by the Concord Consortium.
      .tablecell
        = check_box_tag 'include_contributed', '1', params[:include_contributed], :id => 'include_contributed'
        %label.tooltip
          Authored by Community
          %span.tip
            These materials are written by external contributors.
    .filter-group
      .filterheader
        Material Type
      .tablecell
        = check_box_tag 'material_types[]', 'Investigation', @form_model.material_types.include?('Investigation'),:id=>'investigation'
        = label_tag 'investigation', t(:investigation).titleize
      .tablecell
        = check_box_tag 'material_types[]', 'Activity',  @form_model.material_types.include?('Activity'),:id=>'Activity'
        = label_tag 'activity','Activity'
      .tablecell
        = check_box_tag 'material_types[]', 'Interactive',  @form_model.material_types.include?('Interactive'),:id=>'Interactive'
        = label_tag 'interactive', t(:interactive).titleize
      %br
      .filterheader
        Material Properties
      .tablecell
        = check_box_tag 'material_properties[]', SearchModelInterface::RunsInBrowser, @form_model.runs_in_browser, :id => 'runs_in_browser'
        %label.tooltip
          Runs In Browser
          %span.tip
            These materials do not launch a Java webstart application.
      .tablecell
        = check_box_tag 'material_properties[]', SearchModelInterface::RequiresDownload, @form_model.requires_download, :id => 'requires_download'
        %label.tooltip
          Requires Download
          %span.tip
            These materials download a file to your computer, and start using Java Web Start.
    .filter-group
      = render :partial => "search/sensors_filter"
    - unless current_visitor.anonymous?
      .filter-group
        %br
        .authored_by_me
          = check_box_tag 'include_mine', '1', params[:include_mine], :id => 'include_mine', :class => 'include_mine'
          %label.tooltip.filterheader{:for => "include_mine", :class => 'include_mine'}
            = t "search.only_mine"
        .only_show_archived
          = check_box_tag 'show_archived', '1', params[:show_archived], :id => 'show_archived', :class => 'show_archived'
          %label.tooltip.filterheader{:for => "show archived", :class => 'show_archived'}
            = t "search.only_archived"

= render :partial=>"search/customize_filters"


:javascript

  jQuery(function(){
    var authoredByMe = jQuery("#include_mine"),
        includeMine = jQuery(".include_mine"),
        showArchived = jQuery(".show_archived"),
        includeOfficial = jQuery("#include_official"),
        includeCommunity = jQuery("#include_contributed"),
        autoUncheck = function() {
          if(!authoredByMe.is(":checked")) {
            includeOfficial.prop('checked', false);
            includeCommunity.prop('checked', false);
          }
        };
    includeMine.on("mousedown",autoUncheck);
    showArchived.on("mousedown",autoUncheck);
  });
