#add_menu.dropdown
  %ul
    - element_types.each do |type|
      %li= link_to_remote "#{type.display_name}", :url => url_for(:action => 'add_element', :class_name => type.name, :page_id => @page.id),:html => {:class=>'action'}, :complete => mce_init_string
#actions_menu.dropdown
  %ul
    %li= run_link_for(@page)
    %li= toggle_all('elements')
    %li= link_to toggle_link_title('preview', 'edit'), preview_page_path(page)
    - if (page.changeable?(current_user))
      %li= link_to 'duplicate', duplicate_page_url(page)
      
%div{:id => dom_id_for(page,:item), :class =>"action_menu"}       
  .action_menu
    .action_menu_header_left
      .padded_content
      .padded_content
        = render :partial=>'shared/in_place_fields', :locals => {:item=>page}
    .action_menu_header_right
      = render :partial => "shared/notes_menu", :locals => {:authorable => page}
      = dropdown_button "actions.png", :title => "actions for this page"
      - if (page.changeable?(current_user))
        = dropdown_button "add.png", :title => 'add content to this page'
      - if (page.previous)
        = link_button "previous_page.png", page.previous, :title => "go to previous page"
      - else
        .rollover= image_tag("blank.png")
      - if (page.next)
        = link_button "next_page.png", page.next, :title => 'next page'
      - else
        .rollover= image_tag("blank.png")
