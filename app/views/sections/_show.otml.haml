= render :partial => 'pages/show', :locals => {:teacher_mode => teacher_mode}, :collection => section.pages, :as => :page

- content_for("section_#{dom_id_for(section)}".to_sym) do
  %OTSection{ :local_id => ot_local_id_for(section), :name => ot_menu_display_name(section)   }
    %header
      %OTCompoundDoc{ :local_id => ot_local_id_for(section, :header) }
        %bodyText
          - if teacher_mode
            - if teacher_only?(section)
              #content.teacher_mode
                %h1= h(section.name)
            - else
              #content
                %h1= h(section.name)
          - else
            #content
              %h1= h(section.name)

    %content
      - if teacher_mode
        %OTTabContainer{:local_id => "tab_container", :name => "Tab Container"}
          %tabs
            %entry{:key => section.name}
              %object{:refid => ot_refid_for(section, :page_card_container)}
            %entry{:key => "Teacher notes"}
              %object{:refid => ot_refid_for(section, :teacher_notes_container) }

      - else
        %object{ :refid => ot_refid_for(section, :page_card_container)}/
      
    %footer
      %object{ :refid => ot_refid_for(section, :menu) }/



- content_for(:library) do
  %OTCardContainer{ :local_id => ot_local_id_for(section, :teacher_notes_container), :contentsMayScroll => 'true' }
    %cards
      %OTCompoundDoc{ :local_id => ot_local_id_for(section, :teacher_notes) }
        %bodyText
          %br
          #teacher_notes.teacher_mode
            - if section.investigation
              - if section.investigation.teacher_notes.size > 0
                %h3= "Investigation notes:"
                .activity_teacher_note= section.investigation.teacher_notes[0].body.gsub(/\n/,"<br/>")
            - if section.activity 
              - if section.activity.teacher_notes.size > 0
                %h3= "Activity notes:"
                .activity_teacher_note= htmlize_teacher_note_body(section.activity.teacher_notes[0])
  
            - if section.teacher_notes.size > 0
              %h3= "Section notes:"
              .section_teacher_note= htmlize_teacher_note_body(section.teacher_notes[0])

            - section.pages.each do |page|
              .page_teacher_notes
                - if page.teacher_notes.size > 0
                  %h3="Page notes (#{page.name}):"
                  .page_teacher_note= page.teacher_notes[0].body
    %currentCard
      %object{ :refid => ot_refid_for(section, :teacher_notes) }/
              
  %OTCardContainer{ :local_id => ot_local_id_for(section, :page_card_container), :contentsMayScroll => 'true' }
    %cards
      - section.pages.each do |page|
        - unless ((teacher_only?(page)) && (!teacher_mode))
          =yield "page_#{dom_id_for(page)}".to_sym
    %currentCard
      - if section.pages.first
        - unless ((teacher_only?(section.pages.first)) && (!teacher_mode))
          %object{ :refid => ot_refid_for(section.pages.first) }/
    %viewedCards
  %OTMenu{ :local_id => ot_local_id_for(section, :menu), :moveToNextSectionAllowed => 'true' }
    %cardContainer
      %object{ :refid => ot_refid_for(section, :page_card_container) }/
    %menuRule
      %object{ :refid => ot_refid_for(section, :page_rule) }/

  %OTMenuRule{ :local_id => ot_local_id_for(section, :page_rule), :jumpToViewedCard => 'true', :stepAhead => 'true' }/
