= render :partial => 'pages/show', :collection => section.pages, :as => :page

- content_for("section_#{dom_id_for(section)}".to_sym) do
  %OTSection{ :local_id => ot_local_id_for(section), :name => section.name   }
    %header
      %OTCompoundDoc{ :local_id => ot_local_id_for(section, :header) }
        %bodyText
          #content
            %h1= h(section.name)
    %content
      %OTCardContainer{ :local_id => ot_local_id_for(section, :page_card_container), :contentsMayScroll => 'true' }
        %cards
          - section.pages.each do |page|
            =yield "page_#{dom_id_for(page)}".to_sym
        %currentCard
          - if section.pages.first
            %object{ :refid => ot_refid_for(section.pages.first) }/
        %viewedCards
    %footer
      %object{ :refid => ot_refid_for(section, :menu) }/

- content_for(:library) do

  %OTMenu{ :local_id => ot_local_id_for(section, :menu), :moveToNextSectionAllowed => 'true' }
    %cardContainer
      %object{ :refid => ot_refid_for(section, :page_card_container) }/
    %menuRule
      %object{ :refid => ot_refid_for(section, :page_rule) }/

  %OTMenuRule{ :local_id => ot_local_id_for(section, :page_rule), :jumpToViewedCard => 'true', :stepAhead => 'true' }/
