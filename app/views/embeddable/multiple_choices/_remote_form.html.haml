- remote_form_for(multiple_choice, :update => dom_id_for(multiple_choice, :item), :before =>  "tinyMCE.triggerSave(true,true)") do |f|
  = edit_menu_for(multiple_choice, f)
  .content
    / - field_set_tag 'name' do
    /   = f.text_field :name, :id => dom_id_for(multiple_choice, :item, :name_field)
    - field_set_tag 'prompt' do
      = f.text_area :prompt, :id => dom_id_for(multiple_choice, :item, :textarea), :class => 'tinymce_textarea'

    %fieldset{:id => dom_id_for(multiple_choice, :edit_layout)}
      %legend
        layout
      .options
        %ul.menu_h
          %li
            %span
              = label_tag :vertical, "Vertical:"
              = check_box_tag :horizontal, 0, !(multiple_choice.horizontal || multiple_choice.is_likert), {:id => dom_id_for(multiple_choice, :vertical)}
          %li
            %span
              = f.label :horizontal, "Horizontal:"
              = f.check_box :horizontal, {:id => dom_id_for(multiple_choice, :horizontal)}
          %li
            %span
              = f.label :is_likert, "Likert:"
              = f.check_box :is_likert, {:id => dom_id_for(multiple_choice, :is_likert)}
      :javascript
        $j(document).ready(function() {
          var vert = $j('##{dom_id_for(multiple_choice, :vertical)}'),
              horiz = $j('##{dom_id_for(multiple_choice, :horizontal)}'),
              likert = $j('##{dom_id_for(multiple_choice, :is_likert)}');

          vert.click(function() {
            horiz.prop("checked", false);
            likert.prop("checked", false);
          });

          horiz.click(function() {
            vert.prop("checked", false);
            likert.prop("checked", false);
          });

          likert.click(function() {
            horiz.prop("checked", false);
            vert.prop("checked", false);
          });
        });
    %fieldset{:id => dom_id_for(multiple_choice, :edit_choices)}
      %legend 
        choices
      .action_menu
        .action_menu_header_right
          %ul
            %li= link_to_remote "add choice", :url => add_choice_embeddable_multiple_choice_url(multiple_choice)
      #choices
        - f.fields_for :choices do |choice_form|
          = render :partial => "edit_choice", :locals => {:multiple_choice => multiple_choice, :form => choice_form}

