= render :partial => 'pages/show', :locals => {:teacher_mode => teacher_mode}, :collection => inner_page.sub_pages, :as => :page
-if inner_page.static_page
  = render :partial => 'pages/show', :locals => {:teacher_mode => teacher_mode, :page => inner_page.static_page}
%OTCompoundDoc{ :local_id => ot_local_id_for(inner_page), :name => inner_page.name }
  %bodyText
    %table{:width=>'100%'}
      %tr{:valign => 'bottom'}
        -if inner_page.static_page
          %td
            =yield "page_#{dom_id_for(inner_page.static_page)}".to_sym
        %td
          %div{ :style => " margin: 5px; padding:2px;" }
            %object{ :refid => ot_refid_for(inner_page, :page_card_container) }/
            %br/
            %object{ :refid => ot_refid_for(inner_page, :menu) }/    


- content_for(:library) do
  %OTCardContainer{ :local_id => ot_local_id_for(inner_page, :page_card_container), :contentsMayScroll => 'true' }
    %cards
      - inner_page.sub_pages.each do |page|
        =yield "page_#{dom_id_for(page)}".to_sym
    %currentCard
      - if inner_page.sub_pages.first
        %object{ :refid => ot_refid_for(inner_page.sub_pages.first, :content) }/
    %viewedCards
    
  %OTMenu{ :local_id => ot_local_id_for(inner_page, :menu) }
    %cardContainer
      %object{ :refid => ot_refid_for(inner_page, :page_card_container) }/
    %menuRule
      %object{ :refid => ot_refid_for(inner_page, :page_rule) }/

  %OTMenuRule{ :local_id => ot_local_id_for(inner_page, :page_rule), :jumpToViewedCard => 'true', :stepAhead => 'true' }/